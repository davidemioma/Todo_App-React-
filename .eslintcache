[{"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/index.js":"1","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/App.js":"2","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Header/Header.js":"3","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/Todo.js":"4","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/NewTodo.js":"5","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoList.js":"6","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoItem.js":"7","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoInfo.js":"8","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoFilter.js":"9","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Footer/Footer.js":"10","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/store/todo-context.js":"11","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/store/TodoProvider.js":"12"},{"size":142,"mtime":1616592305000,"results":"13","hashOfConfig":"14"},{"size":335,"mtime":1640617224956,"results":"15","hashOfConfig":"14"},{"size":311,"mtime":1639572051547,"results":"16","hashOfConfig":"14"},{"size":1448,"mtime":1640617127548,"results":"17","hashOfConfig":"14"},{"size":665,"mtime":1639668849558,"results":"18","hashOfConfig":"14"},{"size":462,"mtime":1641569041795,"results":"19","hashOfConfig":"14"},{"size":646,"mtime":1641569100242,"results":"20","hashOfConfig":"14"},{"size":624,"mtime":1640619091677,"results":"21","hashOfConfig":"14"},{"size":551,"mtime":1639586449591,"results":"22","hashOfConfig":"14"},{"size":175,"mtime":1639588884878,"results":"23","hashOfConfig":"14"},{"size":226,"mtime":1640618819940,"results":"24","hashOfConfig":"14"},{"size":2139,"mtime":1640618991501,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"50oei4",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/index.js",[],["53","54"],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/App.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Header/Header.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/Todo.js",["55"],"import \"./Todo.css\";\nimport NewTodo from \"./NewTodo\";\nimport TodoList from \"./TodoList\";\nimport TodoInfo from \"./TodoInfo\";\nimport TodoFilter from \"./TodoFilter\";\nimport { useState, useContext } from \"react\";\nimport TodoContext from \"../../store/todo-context\";\n\nfunction Todo(props) {\n  const [filterValue, setFilterValue] = useState(\"all\");\n\n  const todoCtx = useContext(TodoContext);\n\n  const savedDataHandler = (todo) => {\n    const todoItem = {\n      id: Math.random().toString(),\n      value: todo,\n      isCompleted: false,\n    };\n\n    todoCtx.addTodo(todoItem);\n  };\n\n  const removeTodo = (id) => {\n    todoCtx.removeTodo(id);\n  };\n\n  const completeTodo = (todo) => {\n    todoCtx.setTodoActive(todo);\n  };\n\n  const getFilteredValue = (value) => {\n    setFilterValue(value);\n  };\n\n  const filteredTodo = todoCtx.items.filter((todo) => {\n    if (filterValue === \"completed\" && todo.isCompleted === true) {\n      return todo;\n    }\n\n    if (filterValue === \"active\" && todo.isCompleted === false) {\n      return todo;\n    }\n\n    if (filterValue === \"all\") {\n      return todo;\n    }\n  });\n\n  return (\n    <div className=\"todo_container container\">\n      <NewTodo onSavedData={savedDataHandler} />\n      <TodoList\n        items={filteredTodo}\n        onRemoveTodoItem={removeTodo}\n        onTodoCompleted={completeTodo}\n      />\n      <TodoInfo />\n      <TodoFilter onFilterSelected={getFilteredValue} />\n    </div>\n  );\n}\n\nexport default Todo;\n","/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/NewTodo.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoList.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoItem.js",["56"],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoInfo.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Todo/TodoFilter.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/components/Footer/Footer.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/store/todo-context.js",[],"/Users/emiomadavid/Desktop/Uche/React/todo_list/src/store/TodoProvider.js",["57"],"import TodoContext from \"./todo-context\";\nimport { useReducer } from \"react\";\n\nconst defaultTodoState = {\n  items: [],\n};\n\nconst todoReducer = (state, action) => {\n  if (action.type === \"ADD_TODO_ITEM\") {\n    const updatedTodo = state.items.concat(action.item);\n    return {\n      items: updatedTodo,\n    };\n  }\n\n  if (action.type === \"REMOVE_TODO_ITEM\") {\n    const updatedTodo = state.items.filter((item) => item.id != action.id);\n    return {\n      items: updatedTodo,\n    };\n  }\n\n  if (action.type === \"SET_TODO_ACTIVE\") {\n    const existingTodoItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingTodoItem = state.items[existingTodoItemIndex];\n\n    let updatedTodo;\n\n    if (existingTodoItem) {\n      const updatedItem = {\n        ...existingTodoItem,\n        isCompleted: true,\n      };\n\n      updatedTodo = [...state.items];\n      updatedTodo[existingTodoItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedTodo,\n    };\n  }\n\n  if (action.type === \"CLEAR_COMPLETED\") {\n    const updatedTodo = state.items.filter(\n      (item) => item.isCompleted === false\n    );\n\n    return {\n      items: updatedTodo,\n    };\n  }\n\n  return defaultTodoState;\n};\n\nfunction TodoProvider(props) {\n  const [todoState, dispatchTodoAction] = useReducer(\n    todoReducer,\n    defaultTodoState\n  );\n\n  const addTodoItemHandler = (item) => {\n    dispatchTodoAction({ type: \"ADD_TODO_ITEM\", item: item });\n  };\n\n  const removeTodoItemHandler = (id) => {\n    dispatchTodoAction({ type: \"REMOVE_TODO_ITEM\", id: id });\n  };\n\n  const setTodoActiveHandler = (item) => {\n    dispatchTodoAction({ type: \"SET_TODO_ACTIVE\", item: item });\n  };\n\n  const ClearCompletedHandler = () => {\n    dispatchTodoAction({ type: \"CLEAR_COMPLETED\" });\n  };\n\n  const todoContext = {\n    items: todoState.items,\n    addTodo: addTodoItemHandler,\n    removeTodo: removeTodoItemHandler,\n    setTodoActive: setTodoActiveHandler,\n    clearCompleted: ClearCompletedHandler,\n  };\n\n  return (\n    <TodoContext.Provider value={todoContext}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport default TodoProvider;\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":36,"column":52,"nodeType":"64","messageId":"65","endLine":36,"endColumn":54},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":17,"column":62,"nodeType":"72","messageId":"73","endLine":17,"endColumn":64},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]